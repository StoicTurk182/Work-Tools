
\\Workaround run below.bat\\

For optiplex F12 - Select Windows Boot Manager - F8 safemode "with networking". 

Boot into Safe Mode from Windows 11 or Windows 10
Press the Windows + I on the keyboard to open Settings.
If that does not work, click Start and then select Settings.
Click Update & Security, and on the left pane select Recovery.
Under Advanced Startup, click Restart Now.
After the computer restarts, on the Choose an Option screen, select Troubleshoot > Advanced Options > Startup Settings > Restart.
After the computer restarts, a list of options appears. Select 4 or F4 to start the computer in Safe Mode. If you must use the Internet, select 5 or F5 for Safe Mode with Networking.

Boot into Safe Mode from the sign-in screen in Windows 11 or Windows 10
Restart the computer.
At the sign-in screen, hold the Shift key down and then click Power > Restart.
After the computer restarts to the Choose an Option screen, select Troubleshoot > Advanced Options > Startup Settings > Restart.
After the computer restarts, a list of options should appear. Select 4 or F4 to start the computer in Safe Mode. If you must use the Internet, select 5 or F5 for Safe Mode with Networking.

Boot into Safe Mode from outside of Windows 11 or Windows 10
Windows 11 and Windows 10 automatically boot into the Windows Recovery Environment (WinRE) if Windows fails to start three times in a row. Three consecutive failed attempts trigger this action. Booting to Safe Mode outside of Windows is achieved in the WinRE.

Follow these steps to enter Safe Mode from the WinRE:
At the Choose an option screen, select Troubleshoot.
At the Troubleshoot screen, select Advanced Options.
At the Advanced Options screen, select Advanced Startup Options.
Select Startup Settings.
Select Restart.
The computer restarts and enters the Startup Settings menu. Select 4 or F4 to start the computer in Safe Mode. If you must use the Internet, select 5 or F5 for Safe Mode with Networking.

--------------------------------------------------------------------------------------------

@echo off

set filePath=C:\Windows\System32\drivers\CrowdStrike\C-00000291-00000000-00000033.sys

if exist %filePath% (
    del %filePath%
    echo File deleted successfully.
) else (
    echo File does not exist.
)

pause 

exit
--------------------------------------------------------------------------------------------

@echo off
:: List of IP addresses
setlocal enabledelayedexpansion
set "ipList=192.168.1.10 192.168.1.11 192.168.1.12"

:: Path to PsExec executable
set PsExecPath="C:\Path\to\psexec.exe"

:: Command to delete the file
set CommandToRun="del C:\Windows\System32\drivers\CrowdStrike\C-00000291-00000000-00000033.sys"

:: Loop through each IP in the list
for %%i in (%ipList%) do (
    echo Running command on %%i
    %PsExecPath% \\%%i -s cmd /c %CommandToRun%
    
    if !errorlevel! neq 0 (
        echo Failed to execute on %%i
    ) else (
        echo Command executed successfully on %%i
    )
)

pause


--------------------------------------------------------------------------------------------

Also alternate:
 
del C:\Windows\System32\drivers\CrowdStrike\C-00000291-00000000-00000033.sys

--------------------------------------------------------------------------------------------

# Get the path to the current script directory
$scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Definition

# Paths to the IP list and PsExec
$ipListPath = Join-Path $scriptDir "ips.txt"
$PsExecPath = Join-Path $scriptDir "PsExec.exe"

# Command to delete the file on the remote system
$CommandToRun = 'del C:\Windows\System32\drivers\CrowdStrike\C-00000291-00000000-00000033.sys'

# Check if the IP list file exists
if (-not (Test-Path -Path $ipListPath)) {
    Write-Host "Error: IP list file 'ips.txt' not found in $scriptDir." -ForegroundColor Red
    exit
}

# Check if PsExec executable exists
if (-not (Test-Path -Path $PsExecPath)) {
    Write-Host "Error: PsExec.exe not found in $scriptDir." -ForegroundColor Red
    exit
}

# Read IPs from the file
$ipList = Get-Content -Path $ipListPath

if ($ipList.Count -eq 0) {
    Write-Host "Error: 'ips.txt' is empty. Please provide IP addresses." -ForegroundColor Red
    exit
}

Write-Host "Starting deletion process..." -ForegroundColor Green

foreach ($ip in $ipList) {
    Write-Host "Running command on $ip"
    
    # Run PsExec command on the remote machine
    $process = Start-Process -FilePath $PsExecPath -ArgumentList "\\$ip -s cmd /c $CommandToRun" -Wait -NoNewWindow -PassThru

    # Check if the command succeeded or failed
    if ($process.ExitCode -eq 0) {
        Write-Host "Command executed successfully on $ip" -ForegroundColor Green
    } else {
        Write-Host "Failed to execute on $ip" -ForegroundColor Red
    }
}

Write-Host "Deletion process finished." -ForegroundColor Green

# Pause to review the results
Read-Host -Prompt "Press Enter to exit"

--------------------------------------------------------------------------------------------



\\Ongoing issues: 

(VEEM catalog & inventory of tapes) server was distrupted by the outage due to CloudStrike. (Resolved)

\\Unrelated to CroudStrike 
BackupExec catalog failure restating operation. (Running a sequencial inventory and catalog seemed to fixes this issue)
--------------------------------------------------------------------------------------------
\\DOA Check on GPU 4060 (needs to be done by 25/7/2024.)  


\\Ongoing Killdisk Operation on marked drives. (Long term goal finsih before end of year)
--------------------------------------------------------------------------------------------
Notes: Another option is to use PXE and WindowPE, modifing the start.cmd with the  about .bat instructions will resolve the issue also you can use Psexec from systernals to make these changes.

   
